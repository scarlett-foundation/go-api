{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A Go API service for the Scarlett Protocol that provides chat completion functionality",
        "title": "Scarlett API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.scarlett.ai/support",
            "email": "help@scarlett.ai"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "${API_HOST}",
    "basePath": "/",
    "paths": {
        "/chat/completions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Proxies a chat completions request to the Groq API. Important: Authorization header must use Bearer format (e.g., \"Bearer your-api-key\").",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Process chat completions request",
                "parameters": [
                    {
                        "description": "Chat request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChatRequestExample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ChatRequestExample": {
            "description": "Example chat request",
            "type": "object",
            "properties": {
                "max_tokens": {
                    "description": "Maximum number of tokens to generate",
                    "type": "integer",
                    "example": 100
                },
                "messages": {
                    "description": "Array of messages in the conversation",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "description": "Content of the message",
                                "type": "string",
                                "example": "Hello, how are you?"
                            },
                            "role": {
                                "description": "Role of the message sender",
                                "type": "string",
                                "example": "user"
                            }
                        }
                    }
                },
                "model": {
                    "description": "Model ID",
                    "type": "string",
                    "example": "deepseek-r1-distill-llama-70b"
                },
                "stream": {
                    "description": "Whether to stream the response",
                    "type": "boolean",
                    "example": false
                },
                "temperature": {
                    "description": "Sampling temperature",
                    "type": "number",
                    "example": 0.7
                }
            }
        },
        "types.ChatResponse": {
            "type": "object",
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Choice"
                    }
                },
                "created": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "system_fingerprint": {
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/types.Usage"
                }
            }
        },
        "types.Choice": {
            "type": "object",
            "properties": {
                "finish_reason": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "message": {
                    "$ref": "#/definitions/types.Message"
                }
            }
        },
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {},
                        "message": {
                            "type": "string"
                        },
                        "param": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "types.Message": {
            "description": "A message in a chat conversation",
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content of the message\nexample: Hello, how are you today?",
                    "type": "string",
                    "example": "Hello, how are you today?"
                },
                "role": {
                    "description": "Role of the message sender (e.g., user, assistant)\nexample: user",
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "types.Usage": {
            "type": "object",
            "properties": {
                "completion_tokens": {
                    "type": "integer"
                },
                "prompt_tokens": {
                    "type": "integer"
                },
                "total_tokens": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "API key authentication with Bearer prefix (e.g., \"Bearer your-api-key\"). The 'Bearer ' prefix is REQUIRED - requests without it will be rejected.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}