version: '3.8'

services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - grafana
    networks:
      - scarlett-network
    restart: unless-stopped

  api:
    image: scarlettai/go-api:latest
    container_name: api
    expose:
      - "8082"
    volumes:
      - ./api-keys.yaml:/app/api-keys.yaml:ro
    networks:
      - scarlett-network
    environment:
      - PORT=8082
      - ENVIRONMENT=production
      - API_HOST=api.scarlett.ai
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    expose:
      - "9090"
    healthcheck:
      test: ["CMD", "pgrep", "prometheus"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - scarlett-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    depends_on:
      prometheus:
        condition: service_healthy
    expose:
      - "3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana_data:/var/lib/grafana
    networks:
      - scarlett-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards:false
      - GF_SERVER_ROOT_URL=https://grafana.scarlett.ai
      - GF_SERVER_DOMAIN=grafana.scarlett.ai
    restart: unless-stopped

networks:
  scarlett-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: 